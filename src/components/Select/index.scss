@use 'sass:color';
@use 'sass:map';

@import '../../assets/scss/_variables.scss';
@import '../../assets/scss/_animations.scss';
@import '../../assets/scss/_states.scss';

$sizes: (
	'sm': (
		'font-size': 11px,
		'line-height': 12px,
		'padding': 0.5rem 0.8rem,
	),
	'md': (
		'font-size': 13.5px,
		'line-height': 21.5px,
		'padding': 0.7rem 1rem,
	),
	'lg': (
		'font-size': 18px,
		'line-height': 26px,
		'padding': 0.9rem 1.2rem,
	),
);

.mr-select-container {
	@include canBeDisabled();

	position: relative;
	z-index: 10;
	box-sizing: border-box;
	display: flex;
	align-items: center;
	justify-content: space-between;
	width: max-content;
	font-family: $fontFamily;
	font-size: $fontSize;
	font-weight: 600;
	cursor: pointer;
	background-color: $sectionBackgroundColor;
	border: 1px solid transparent;
	border-radius: $borderRadius;
	outline: none;
	transition: background-color 200ms ease-out;
	will-change: transform;

	&.state-opened {
		z-index: 20;
	}

	@each $sizeName, $sizeValues in $sizes {
		&.size-#{$sizeName} {
			padding: map.get($sizeValues, 'padding');
			font-size: map.get($sizeValues, 'font-size');
			line-height: map.get($sizeValues, 'line-height');

			.mr-icon {
				padding-top: 2px;
				padding-left: map.get($sizeValues, 'font-size') - 5px;
				font-size: map.get($sizeValues, 'font-size') + 4px;
			}
		}
	}

	.mr-select {
		position: absolute;
		top: calc(100% - 5px);
		left: 0;
		z-index: 20;
		display: flex;
		flex-direction: column;
		width: 100%;
		min-width: 150px;
		max-height: 170px;
		padding: 4px 0 0;
		overflow-y: auto;
		cursor: default;
		background-color: $sectionBackgroundColor;
		border: 1px solid lighten($borderColor, 10%);
		border-radius: $borderRadius;
		box-shadow: 0 3px 12px 3px rgb(0 0 0 / 5%);
		transition: opacity 500ms;

		&::-webkit-scrollbar {
			width: 4px;
			border-radius: $borderRadius;
		}

		&::-webkit-scrollbar-thumb {
			background-color: darken($sectionBackgroundColor, 15%);
			border-radius: $borderRadius;
			transition: background-color 300ms linear;

			&:hover {
				background-color: darken($sectionBackgroundColor, 20%);
			}
		}

		.mr-select-option {
			display: flex;
			align-items: center;
			padding: 0.2rem 0.8rem;
			margin-bottom: 4px;
			cursor: pointer;
			border-top: 1px solid transparent;
			border-bottom: 1px solid transparent;

			&:hover,
			&.selected {
				background-color: darken($sectionBackgroundColor, 5%);
				border-top-color: darken($sectionBackgroundColor, 7%);
				border-bottom-color: darken($sectionBackgroundColor, 7%);
			}
		}
	}

	.mr-icon {
		padding-left: 16px;
	}

	@include pop-in-fade();

	&.solid-theme {
		color: color.invert(map.get($variants, 'default'), $weight: 100%);
		background-color: map.get($variants, 'default');
		border-color: map.get($variants, 'default');

		.mr-select {
			color: color.invert(map.get($variants, 'default'), $weight: 100%);
			background-color: map.get($variants, 'default');
			border-color: map.get($variants, 'default');
			box-shadow: 0 4px 6px rgb(50 50 93 / 11%), 0 1px 3px rgb(0 0 0 / 8%);

			.mr-select-option {
				&:hover,
				&.selected {
					background-color: fade-out(color.invert(map.get($variants, 'default'), $weight: 100%), 0.9);
					border-top-color: transparent;
					border-bottom-color: transparent;
				}
			}
		}

		@each $variantName, $variantColor in $variants {
			&.variant-#{$variantName} {
				@if color.lightness($variantColor) < 80 {
					color: $whiteColor;

					.mr-select {
						color: $whiteColor;
					}
				}

				@else {
					color: $textColor;

					.mr-select {
						color: $textColor;
					}
				}

				background-color: $variantColor;
				border-color: $variantColor;

				&:active {
					background-color: darken($variantColor, 7%);
				}

				.mr-select {
					background-color: $variantColor;
					border-color: $variantColor;

					&::-webkit-scrollbar-thumb {
						@if color.lightness($variantColor) < 80 {
							background-color: fade-out($whiteColor, 0.6);
						}

						@else {
							background-color: fade-out($variantColor, 0.6);
						}

						border-radius: $borderRadius;
						transition: background-color 300ms linear;

						&:hover {
							@if color.lightness($variantColor) < 80 {
								background-color: fade-out($whiteColor, 0.5);
							}

							@else {
								background-color: fade-out($variantColor, 0.5);
							}
						}
					}

					.mr-select-option {
						&:hover,
						&.selected {
							background-color: fade-out(color.invert($variantColor, $weight: 100%), 0.9);
							border-top-color: transparent;
							border-bottom-color: transparent;
						}
					}
				}
			}
		}
	}

	&.outlined-theme {
		color: map.get($variants, 'default');
		background-color: $sectionBackgroundColor;
		border-color: map.get($variants, 'default');

		.mr-select {
			color: map.get($variants, 'default');
			background-color: $sectionBackgroundColor;
			border-color: map.get($variants, 'default');
			box-shadow: 0 4px 6px rgb(50 50 93 / 11%), 0 1px 3px rgb(0 0 0 / 8%);

			.mr-select-option {
				&:hover,
				&.selected {
					background-color: fade-out(color.invert(map.get($variants, 'default'), $weight: 100%), 0.9);
					border-top-color: fade-out(color.invert(map.get($variants, 'default'), $weight: 100%), 0.85);
					border-bottom-color: fade-out(color.invert(map.get($variants, 'default'), $weight: 100%), 0.85);
				}
			}
		}

		@each $variantName, $variantColor in $variants {
			&.variant-#{$variantName} {
				@if color.lightness($variantColor) > 80 {
					color: $textColor;

					.mr-select {
						color: $textColor;
					}
				}

				@else {
					color: $variantColor;

					.mr-select {
						color: $variantColor;
					}
				}

				border-color: fade-out($variantColor, 0.7);

				&:active {
					background-color: darken($sectionBackgroundColor, 12%);
				}

				.mr-select {
					background-color: $sectionBackgroundColor;
					border-color: fade-out($variantColor, 0.7);

					&::-webkit-scrollbar-thumb {
						background-color: darken($sectionBackgroundColor, 15%);
						border-radius: $borderRadius;
						transition: background-color 300ms linear;

						&:hover {
							background-color: darken($sectionBackgroundColor, 20%);
						}
					}

					.mr-select-option {
						&:hover,
						&.selected {
							background-color: darken($sectionBackgroundColor, 5%);
							border-top-color: darken($sectionBackgroundColor, 7%);
							border-bottom-color: darken($sectionBackgroundColor, 7%);
						}
					}
				}
			}
		}
	}
}
