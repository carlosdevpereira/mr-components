name: Build

on:
  push:
    branches:
      - "**"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"

      - name: Install dependencies ðŸ“¦
        run: npm ci

      - name: Execute unit tests ðŸ§ª
        run: npm run test:unit:coverage

      - name: Compute short commit hashes
        id: sha_shorts
        run: |
          HEAD_SHA=`git rev-parse --short ${{ github.sha }}`
          echo ::set-output name=head_sha::"$HEAD_SHA"

      - name: Upload test coverage ðŸ§ª
        if: ${{ github.actor != 'dependabot[bot]' }}
        id: upload
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          projectName: mr-components-coverage
          directory: coverage
          branch: ${{ steps.sha_shorts.outputs.head_sha }}

      - name: Build Docs ðŸ“•
        run: npm run build

  comment-code-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Compute short commit hashes
        id: sha_shorts
        run: |
          HEAD_BRANCH=`${{ github.ref }}`
          HEAD_SHA=`git rev-parse --short ${{ github.sha }}`

          echo ::set-output name=head_sha::"$HEAD_SHA"
          echo ::set-output name=head_branch::"$HEAD_BRANCH"

      - name: Comment coverage on active PR
        uses: actions/github-script@v6
        env:
          BRANCH_NAME: ${{ steps.sha_shorts.outputs.head_branch }}
          BRANCH_COMMIT: ${{ steps.sha_shorts.outputs.head_sha }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const BRANCH_NAME = process.env.BRANCH_NAME;
            const BRANCH_COMMIT = process.env.BRANCH_COMMIT;
            const BASE_PAGES = "mr-components-coverage.pages.dev";

            // Get open pull request for $BRANCH_NAME
            const pullsQueryString = `is:pr state:open repo:${context.repo.owner}/${context.repo.repo} head:${BRANCH_NAME}`
            const {data: pulls} = await github.rest.search.issuesAndPullRequests({
              q: pullsQueryString,
            });

            console.log('pull requests: ', pulls)
